---
import Layout from "../layouts/Layout.astro";
import { getCollection } from "astro:content";

const propertys = (await getCollection("property")).sort(
  (a, b) => new Date(b.data.date) - new Date(a.data.date)
);
// const sortedPosts = propertys.reverse();
const tiposPropiedadUnicos = [...new Set(propertys.map(p => p.data.tipoPropiedad))];
// console.log(propertys)
---

<Layout title="Propiedades" description="Predios disponibles para la compra y venta." image=https://gd32xkqp7siubbfhtlvwairo6m3a4v4ihqfyr7oc4ut7qnulap4q.arweave.net/MPerqg_8kUCEp5rrYCIu8zYOV4g8C4j9wuUn-DaLA_k keywords="propiedades, venta, casa, campestre, finca, lote, compraventa, intercambio, permutas">
  <section>
    <div class="contenido"><h1>Propiedades</h1></div>
    <!-- inicio barra de busqueda -->
    <div id="barra-busqueda">
      <input 
      type="text" 
      id="busqueda" 
      placeholder="Buscar por título, ubicación, tipo..."
      />
      
      <select id="filtroTipo" style="padding: 10px; margin-left: 10px; border: 1px solid #ccc; border-radius: 4px;">
        <option value="">Todos los tipos</option>
        {tiposPropiedadUnicos.map(tipo => (
          <option value={tipo}>{tipo}</option>
          ))}
        </select>
      </div>
      <!-- Fin Barra de busqueda -->
      
    <div id="contenedor">
      {propertys.map((property) => {
        const { slug, data } = property;
        const {title,
          img,
          ubicacion,
          precio,
          tipoPropiedad,
          areaPropiedad,
          estado,
          habitaciones,
          baños,
          parqueadero} = data;

        return (
                
        <div class="card">
        <a class="image" href={`/property/${slug}`}>
          <img src={img} alt={title} />
          <div class="text-overlay">
            {areaPropiedad && <p>{areaPropiedad} - mt2</p>}
            <p>${precio}/COP</p>
            <p><strong>{tipoPropiedad}</strong></p>
          </div>
        </a>
        <div class="content">
          <a href={`/property/${slug}`}>
            <span class="title">
              {title}
            </span>
          </a>
          <div>
            <div id="ubicacion">
              <img src="/gridicons--location.svg" alt="bed" />
              <p class="desc">{ubicacion}</p>
            </div>
          </div> 

          <div>
            <div class="texto-content">
              <div class="habitaciones">
                <p>Habitaciones</p>
                <div class="características">
                  <img src="/material-symbols--bed-outline.svg" alt="bed" />
                  <p>{habitaciones}</p>
                </div>
              </div>
              <div class="habitaciones">
                <p>Baños</p>
                <div class="características">
                  <img src="/mdi--bathroom.svg" alt="bed" />
                  <p>{baños}</p>
                </div>
              </div>
              <div class="habitaciones">
                <p>Parqueadero</p>
                <div class="características">
                  <img src="/mdi--car-back.svg" alt="bed" />
                  <p>{parqueadero}</p>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
          
          // <article>
          //   <a href=""><h4>{title}</h4></a>
          //   <a href={`/property/${slug}`}><img src={img} alt={title} /></a>
          //   <p>Ubicación: {ubicacion}</p>
          //   <p>Tipo de Propiedad: {tipoPropiedad}</p>
          //   <p>Estado: {estado}</p>
          //   <p>Habitaciones: {habitaciones}</p>
          //   <p>Baños: {baños}</p>
          //   <p>Parqueaderos: {parqueadero}</p>
          // </article>
        );
      })}
    </div>
  </section>
</Layout>


<style>

  h1 {
    margin: 12px;
    color: #111827;
    font-size: 46px
  }

  #barra-busqueda {
  display: flex;
  /* flex-direction: column; */
  justify-content: center;
  padding: 20px;
  background: #fff;
}

#barra-busqueda input,
#barra-busqueda select {
  width: 90%;
  max-width: 400px;
  padding: 10px;
  margin: 5px 0;
  border: 1px solid #ccc;
  border-radius: 4px;
  font-size: 1rem;
}

  .contenido {
    width: 100%;
    display: flex;
    justify-content: center;
  }

  section {
    background-color: #fff;
  }

  a {
    color: #fff;
    
  }

   article {
    width: 500px;
    height: 600px;
   
  }
  img {
    width: 100%;
    object-fit: cover;
    height: 230px;
    transition: all 0.3s ease;

  }

  img:hover {
    transform: scale(1.1);
  }

  #ubicacion {
    display: flex;
  }

  #ubicacion img {
    width: auto;
    height: 18px;
  }

  .habitaciones {
    width: 107px;
    text-align: center;
    outline: 2px dashed rgb(72 12 168 / 16%);
    padding: 5px 0;

  }

  .características {
    display: flex;
    justify-content: center;
    gap: 4px
  }

  #contenedor {
    display: flex;
    justify-content: space-around;
    flex-wrap: wrap;
    background: #ecf0f1;
  }

  .texto-content img {
    width: auto;
    height: 18px;
  }

  .texto-content {
    display: flex;
    align-items: center;
    height: 60px;
    /* outline: 2px dashed rgb(72 12 168 / 16%); */
    /* padding: 0 10px; */
    justify-content: space-around;
  }

  .texto-content p {
    color: #000;
  }

   /* From Uiverse.io by Yaya12085 */ 
.card {
  display: flex;
  flex-direction: column;
  /* align-items: center; */
  width: 357px;
  margin: 16px 0;
  transition: all 0.3s ease;
  /* height: 428px; */
  border-radius: 0.5rem;
  background-color: #fff;
  box-shadow: 0 1px 2px 0 rgba(0, 0, 0, 0.05);
  border: 1px solid transparent;
  box-shadow: 0px 0px 4px rgba(72 12 168 / 16%);
}

.card:hover {
  box-shadow: 12px 12px 50px rgba(0, 0, 0, 0.4);
}
.card a {
  
  /* text-decoration: none */

}

.content {
  display: block;
  margin: 5px 15px 0 15px;
}

.image {
  object-fit: cover;
  position: relative;
  display: block;
  overflow: hidden;
  border-radius: 10px;
  /* width: 100%; */
  /* height: 150px; */
  /* background-color: rgb(239, 205, 255); */
}

.text-overlay {
  position: absolute;
  top: 176px;
  width: 100%;
  height: 58px;
  display: flex;
  flex-direction: column;
  justify-content: end;
  background: linear-gradient(to bottom, rgba(6, 22, 71, 0.3), rgba(6, 22, 71, 1));
  color: #fff; /* Texto en blanco */
  opacity: 1; /* Ocultar inicialmente */
  transition: opacity 0.3s ease; /* Transición suave */
}

.text-overlay p {
  margin: 0 16px;
  font-size: 1rem;
  /* font-weight: bold; */
}

.title {
  color: #111827;
  font-size: 1.125rem;
  line-height: 1.75rem;
  font-weight: 600;
}

.desc {
  /* margin-top: 0.5rem; */
  color: #6B7280;
  font-size: 0.875rem;
  line-height: 1.25rem;
}

.action {
  display: inline-flex;
  margin-top: 1rem;
  color: #ffffff;
  font-size: 0.875rem;
  line-height: 1.25rem;
  font-weight: 500;
  align-items: center;
  gap: 0.25rem;
  background-color: #2563EB;
  padding: 4px 8px;
  border-radius: 4px;
}

.action span {
  transition: .3s ease;
}

.action:hover span {
  transform: translateX(4px);
}

@media (max-width: 600px) {
  #barra-busqueda {
    flex-direction: column;
    justify-content: center;
    align-items: center;
    gap: 10px;
  }

  #barra-busqueda input,
  #barra-busqueda select {
    /* width: auto; */
    margin: 0;
  }
}

</style>

<script type="module">
  const busqueda = document.getElementById('busqueda');
  const filtroTipo = document.getElementById('filtroTipo');
  const cards = document.querySelectorAll('.card');

  function filtrar() {
    const texto = busqueda.value.toLowerCase();
    const tipo = filtroTipo.value;

    cards.forEach(card => {
      const titulo = card.querySelector('.title').textContent.toLowerCase();
      const ubicacion = card.querySelector('#ubicacion .desc')?.textContent.toLowerCase();
      const tipoTexto = card.querySelector('.text-overlay strong')?.textContent;

      const coincideTexto = titulo.includes(texto) || ubicacion?.includes(texto);
      const coincideTipo = !tipo || tipoTexto === tipo;

      card.style.display = coincideTexto && coincideTipo ? '' : 'none';
    });
  }

  busqueda.addEventListener('input', filtrar);
  filtroTipo.addEventListener('change', filtrar);
</script>